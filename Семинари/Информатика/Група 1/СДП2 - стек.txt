Задача 1: Решете задачата за Ханойските кули, използвайки рекурсивния алгоритъм, но без рекурсия. Симулирайте поведението със стек.

Задача 2: Реализирайте merge sort или quick sort итеративно (със стек).

Задача 3: Нека имаме валиден израз със скоби. Намерете скобите, които са двойни. Това значи подизраз да е в скоби и още един път в скоби. 
Например в израза (x+y+((x-z))-r) вътрешните скоби са двойни, а тук ((x+y)+((z))) двойни са скобите около z.

Задача 4: Даден е масив от неотрицателни числа. За всеки елемент в масива намерете най-близкия следващ, който е по-голям от него (ако има такъв).
Пример:
вход  [2, 7, 3, 5, 4, 6, 8], изход [7, 8, 5, 6, 6, 8, -1];
вход  [8, 3, 1, 0], изход [-1, -1, -1, -1];

Задача 5: Напишете рекурсивна функция, която приема като аргумент един “компресиран” низ и връща динамично заделен низ, който съдържа декомпресираните данни.
Компресираният низ съдържа 2 вида конструкции и може да считате, че на функцията винаги ще се подава коректно конструиран такъв низ:
Букви, които са символ от 'A' до 'Z'. Те се декомпресират до същата буква.
Групи, които започват с число, последвано от скоби, съдържащи компресиран низ. Декомпресират се като се декомпресира низа в скобите и се повтори толкова пъти колкото е числото.
По-долу са дадени примери за компресиран низ и как ще изглежда той като се декомпресира:
AABC -> AABC
R2(AB)3(Z) -> RABABZZZ
AB12(X)2(B3(A)) -> ABXXXXXXXXXXXXBAAABAAA



Напишете програма, която въвежда от потребителя компресиран низ, подава го на функцията и извежда на екрана декомпресирания му вид.
